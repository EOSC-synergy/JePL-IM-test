config:
  node_agent: 'docker_compose'
  deploy_template: '.sqa/docker-compose.yml'
  credentials:
      - id: orviz-github-basic
        username_var: GIT_USER
        password_var: GIT_PASSWORD
      - id: samuel-dockerhub
        username_var: JPL_DOCKERUSER
        password_var: JPL_DOCKERPASS
      - id: incd_openstack
        variable: OPENSTACK_URL
      - id: incd_openstack_id
        username_var: OPENSTACK_USER
        password_var: OPENSTACK_PASS
      - id: upv_im_id
        username_var: IM_USER
        password_var: IM_PASS

sqa_criteria:
  SvcQC.Dep:
    repos:
      im:
        container: imclient
        commands:
          - |
            #!/bin/bash
            printf "$(cat /im/auth/auth.dat)" "${IM_USER}" "${IM_PASS}" incd "${OPENSTACK_URL}" "${OPENSTACK_USER}" "${OPENSTACK_PASS}" eosc-synergy default > ${IM_AUTH_FILE}
          - |
            #!/bin/bash
            im_client.py -r https://appsgrycap.i3m.upv.es:31443/im/ -a "${IM_AUTH_FILE}" create_wait_outputs /im/test.radl > ./im_radl.json
            RETURN_CODE=$?
            echo "im_client.py create_wait_outputs return code: ${RETURN_CODE}"
            echo "Infrastructure Manager output:"
            cat ./im_radl.json
            if [ ${RETURN_CODE} -eq 0 ]; then
              INFID=$(jq -r '[ .infid ] | .[]'  ./im_radl.json)
              echo "INFID=${INFID}"
              im_client.py -a "${IM_AUTH_FILE}" destroy ${INFID}
              echo "im_client.py destroy return code: $?"
            else
              exit ${RETURN_CODE}
            fi
          - |
            #!/bin/bash
            im_client.py -r https://appsgrycap.i3m.upv.es:31443/im/ -a "${IM_AUTH_FILE}" create_wait_outputs /im/tosca_create.yml > ./im_tosca.json
            RETURN_CODE=$?
            echo "im_client.py create_wait_outputs return code: ${RETURN_CODE}"
            echo "Infrastructure Manager output:"
            cat ./im_radl.json
            if [ ${RETURN_CODE} -eq 0 ]; then
              INFID=$(jq -r '[ .infid ] | .[]'  ./im_tosca.json)
              echo "INFID=${INFID}"
              im_client.py -a "${IM_AUTH_FILE}" destroy ${INFID}
              echo "im_client.py destroy return code: $?"
            else
              exit ${RETURN_CODE}
            fi

environment:
  IM_AUTH_FILE: "/im/auth.dat"
  JPL_DOCKERPUSH: "imclient"
  #JPL_IGNOREFAILURES: "defined"
  #JPL_DOCKERFORCEBUILD: "enabled"
  #JPL_WORKSPACEDEBUG: "true"
  #JPL_WORKSPACEDEBUGTIMEOUT: 45

#timeout: 1200